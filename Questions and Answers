What is responsible for defining the routes of the games resource?
 - The create_router.js file defines the various functions which are used to set the routes of the games app.

What do you notice about the folder structure? Whats the client responsible for? Whats the server responsible for?
- Everything within the games app is divided into two folders; Client and Server. The clinet is responsible for all the information displayed to the end user.
- While the server is handling the database and functions that power this information. 
- The client has a 'services' file, which triggers the necessary fetch requests to the server's API and then displays the information that is returned. 

What are the the responsibilities of server.js?
- The functions of server.js are called when the server is initialised with the command npm run server:dev. 
- This causes the database to connect, and then defines the collection and router that the app should use to populate the information for the client. 
- It also determines the server port that the app should listen to, in this case localhost:9000.
- It also tells the app to use cors, which prevents security blocks on the server and allows the client to access the information.

What are the responsibilities of the gamesRouter?
- gamesRouter is a specific instance of a router, created using the createRouter template, but applying specifically to routes with the determined end-point.
- In this instance '/api/games'.

What process does the the client (front-end) use to communicate with the server?
- The client communicates via RESTful routes, calling fetch requests to the API

What optional second argument does the fetch method take? And what is it used for in this application?
- The fetch to an API can take an additional argument, which determines the Method used in the request. 
- Depending on the method it may also need information for the header and body.

Which of the games API routes does the front-end application consume (i.e. make requests to)?
- The createRouter function generates routes for all methods. 
- However, the gamesRouter only makes use of Get, Post and Delete.


What are we using the MongoDB Driver for?
- When NPM install is run at the beginning, MongoDB driver is installed as a dependency of the program.
- The driver allows the React app to connect to MongoDB and use the data.

Why do we need to use ObjectId from the MongoDB driver?
- The objectID is a unique value assigned to each item in the database, using this allows us to interact with an individual instance in the database, by taking actions such as delete or update. 


